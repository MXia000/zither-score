type User 
  @model 
  @auth(rules: [{ allow: owner, ownerField: "id", queries: null }]) {
  id: ID!
  username: String! 
  email: String!
  scores: [Score] @connection(name: "UserScores", sortField: "createdAt")
  comments: [Comment] @connection(name: "UserComments", sortField: "createdAt")
}

type Score @model {
  id: ID!
  name: String
  notes: [Note] @connection(name: "ScoreNotes")
  user: User @connection(name: "UserScores", sortField: "createdAt")
  createdAt: String
  updatedAt: String
  status: ScoreStatus
  comments: [Comment] @connection(name: "ScoreComments", sortField: "createdAt")
}

type Comment @model {
  id: ID!
  content: String
  score: Score @connection(name: "ScoreComments", sortField: "createdAt")
  user: User @connection(name: "UserComments", sortField: "createdAt")
}

enum ScoreStatus {
  PRIVATE
  PUBLIC
}

type Note @model {
  id: ID!
  number: Int
  dot: dotStatus
  doubleDot: dotStatus
  line: Boolean
  doubleLine: Boolean
  position: [Int]!
  score: Score @connection(name: "ScoreNotes")
  scoreId: String!
}

enum dotStatus {
  TOP
  BOTTOM
}